
package edu.agh.soa;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FindController", targetNamespace = "http://controllers/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FindController {


    /**
     * 
     * @param field
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByField", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByField")
    @ResponseWrapper(localName = "findStudentByFieldResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByFieldResponse")
    public List<Student> findStudentByField(
        @WebParam(name = "field", targetNamespace = "")
        String field);

    /**
     * 
     * @return
     *     returns java.util.List<edu.agh.soa.Course>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCourses", targetNamespace = "http://controllers/", className = "edu.agh.soa.GetCourses")
    @ResponseWrapper(localName = "getCoursesResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.GetCoursesResponse")
    public List<Course> getCourses();

    /**
     * 
     * @param courseName
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByCourseName", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByCourseName")
    @ResponseWrapper(localName = "findStudentByCourseNameResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByCourseNameResponse")
    public List<Student> findStudentByCourseName(
        @WebParam(name = "course_name", targetNamespace = "")
        String courseName);

    /**
     * 
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudents", targetNamespace = "http://controllers/", className = "edu.agh.soa.GetStudents")
    @ResponseWrapper(localName = "getStudentsResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.GetStudentsResponse")
    public List<Student> getStudents();

    /**
     * 
     * @param courseId
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByCourseID", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByCourseID")
    @ResponseWrapper(localName = "findStudentByCourseIDResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByCourseIDResponse")
    public List<Student> findStudentByCourseID(
        @WebParam(name = "course_id", targetNamespace = "")
        Integer courseId);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByLastName", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByLastName")
    @ResponseWrapper(localName = "findStudentByLastNameResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByLastNameResponse")
    public List<Student> findStudentByLastName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param id
     * @return
     *     returns edu.agh.soa.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentById", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentById")
    @ResponseWrapper(localName = "findStudentByIdResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByIdResponse")
    public Student findStudentById(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param firstName
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByName", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByName")
    @ResponseWrapper(localName = "findStudentByNameResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByNameResponse")
    public List<Student> findStudentByName(
        @WebParam(name = "firstName", targetNamespace = "")
        String firstName);

    /**
     * 
     * @param age
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByAge", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByAge")
    @ResponseWrapper(localName = "findStudentByAgeResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByAgeResponse")
    public List<Student> findStudentByAge(
        @WebParam(name = "age", targetNamespace = "")
        Integer age);

    /**
     * 
     * @param yearOfStudy
     * @return
     *     returns java.util.List<edu.agh.soa.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByYearOfStudy", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByYearOfStudy")
    @ResponseWrapper(localName = "findStudentByYearOfStudyResponse", targetNamespace = "http://controllers/", className = "edu.agh.soa.FindStudentByYearOfStudyResponse")
    public List<Student> findStudentByYearOfStudy(
        @WebParam(name = "yearOfStudy", targetNamespace = "")
        Integer yearOfStudy);

}
